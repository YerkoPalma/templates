#!/bin/sh

__dirname=$(dirname "$(readlink -f "$0")")
. "$(readlink -f "$__dirname/../shared.sh")"

# define PROJECTNAME
if [ -z "$1" ]; then
  printf 'What is the name of the project?\n❯ '
  read -r PROJECTNAME
  if [ "$PROJECTNAME" = "" ]; then
    printf 'no name provided, exiting\n'
    exit 1
  fi
else
  PROJECTNAME="$1"
fi

# define DESCRIPTION
if [ -z "$2" ]; then
  printf 'What does this project do?\n❯ '
  read -r DESCRIPTION
  if [ "$DESCRIPTION" = "" ]; then
    printf 'no description provided, exiting\n'
    exit 1
  fi
else
  DESCRIPTION="$2"
fi

# define USERNAME
if [ -z "$3" ]; then
  printf 'Under what user on GitHub will this project live?\n❯ '
  read -r USERNAME
  if [ "$USERNAME" = "" ]; then
    printf 'no username provided, exiting\n'
    exit 1
  fi
else
  USERNAME="$3"
fi

# create base project
savior base "$PROJECTNAME" "$DESCRIPTION" "$USERNAME"
cd "$PROJECTNAME" || exit 1

# index.js
readf "$__dirname/index.js" > index.js

# sw.js
readf "$__dirname/sw.js" > sw.js

# package.json
readf "$__dirname/package.json" \
  | replace 'PROJECTNAME' "$PROJECTNAME" \
  | replace 'DESCRIPTION' "$DESCRIPTION" \
  | replace 'USERNAME' "$USERNAME" \
  > package.json

# manifes.json
readf "$__dirname/manifest.json" \
  | replace 'PROJECTNAME' "$PROJECTNAME" \
  | replace 'DESCRIPTION' "$DESCRIPTION" \
  | replace 'USERNAME' "$USERNAME" \
  > manifest.json

# index.html
readf "$__dirname/index.html" \
  | replace 'PROJECTNAME' "$PROJECTNAME" \
  | replace 'DESCRIPTION' "$DESCRIPTION" \
  | replace 'USERNAME' "$USERNAME" \
  > index.html

#views folder
cp -R "$__dirname/views" views

npm install -S \
  choo \
  choo-service-worker \
  tachyons \
  sheetify

npm install -D \
  standard \
  snazzy \
  budo \
  choo-devtools \
  browserify \
  tinyify \
  css-extract \
  gh-pages

git add .
git commit -m "init"
